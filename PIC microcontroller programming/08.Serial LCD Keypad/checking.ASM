#include <p16f877a.inc>
list p=16f877a
org 0x20
;ohm gam ganapataye namah
BSF STATUS,RP0
MOVLW 0XF0
MOVWF TRISB
MOVLW 0X00
MOVWF TRISC
MOVWF TRISD

MOVLW 0X06
MOVWF ADCON1
CLRF TRISA

BCF OPTION_REG,7  ;PORTB PULLUPS ENABLED
BCF STATUS,RP0
MOVLW 0X00
MOVWF 0X50

;--------------------------------------------------------------
BSF STATUS,RP0
MOVLW 0XFF
MOVWF SPBRG
MOVLW 0X24
MOVWF TXSTA
BCF STATUS,RP0
BSF RCSTA,SPEN

;--------------------------------------------------------------

BSF PORTC,0; 
BCF PORTC,1; WRITE MODE
BSF PORTC,2;E=1
CALL delay
BCF PORTC,0
CALL delay
MOVLW 0X0F
MOVWF PORTD
CALL delay
BCF PORTC,2
CALL delay
BSF PORTC,2
CALL delay
MOVLW 0X38
MOVWF PORTD
CALL delay
BCF PORTC,2
CALL delay
BSF PORTC,2

get_it
;old_key=0x40
;new_key=0x41
;count=0x42
;data_count=0X50

MOVLW 0X00        
MOVWF 0X40      ;old_key=0
MOVWF 0X41      ;new_key=0
get_it_subloop
MOVLW 0X00
MOVWF 0X42      ;count=0
get_it_subloop2
CALL scan_it
MOVF 0X22,0
MOVWF 0X41      ;MOVING KEY_VALUE TO NEW_KEY
SUBWF 0X40,0     ;W<--OLD_KEY-NEW_KEY
BTFSS STATUS,2
GOTO assign_new_to_old
INCF 0X42,1
call delay
BTFSS STATUS,2
GOTO get_it_subloop2
GOTO after_scan_it


assign_new_to_old
MOVF 0X41,0
MOVWF 0X40
GOTO get_it_subloop

;starting of scan_it
scan_it
MOVLW 0X01 
MOVWF 0X20       ;0X20 IS THE KEY_COUNT VARIABLE
MOVLW 0XF7
MOVWF 0X21       ;0X21 IS THE PATTERN TO BE GIVEN TO PORTB
    sub_loop
	MOVF 0X21,0
	MOVWF PORTB  ;OUTPUT 'PATTERN' TO PORTB
	MOVF 0X20,0 ;W=KEY_COUNT
	BTFSS PORTB,7
	GOTO scan_it_finish
    ADDLW 0X03
	BTFSS PORTB,6
    GOTO scan_it_finish
    ADDLW 0X03
	BTFSS PORTB,5
	GOTO scan_it_finish
    ADDLW 0X03
	BTFSS PORTB,4
	GOTO scan_it_finish
    MOVLW 0XFF          ;THESE STEPS
    MOVWF 0X30     
    INCF 0X30,1         ;USED TO SET CARRY FOR THE RIGHT SHIFT
    MOVLW 0XFF          ;MOVING A MARKER TO W TO SHOW NO KEY PRESSED ON THE COLUMN
	INCF 0X20,1         ;INCREMENT KEY_COUNT
    RRF 0X21,1          ;SHIFT PATTERN RIGHT
    BTFSC 0X21,0        ;CHECKING IF PATTERN(0) IS CLEAR
    GOTO sub_loop       ;CHECK NXT COLUMN IF PATTERN(0) IS STILL 1
scan_it_finish
MOVWF 0X22   ;0X22 WILL HAVE THE KEYVALUE,FF-->NO READ ; 
RETURN
;finishing of scan_it
after_scan_it
MOVF 0X40,0 ;W<--OLD_KEY
MOVWF 0X30
INCF 0X30,1 ;CHECKING IF THE CONTINUOUSLY OCCURED VALUE WAS FF(ie. no READ)
BTFSC STATUS,2
GOTO get_it
GOTO check_routine
;STARTING OF DATA STORAGE ALGORITHM

check_routine
MOVF 0X40,0
SUBLW 0X0A
MOVWF 0X30
MOVF 0X30,0
BTFSC STATUS,2
GOTO key_is_star
MOVF 0X40,0
SUBLW 0X0B
MOVWF 0X30
MOVF 0X30,0
BTFSC STATUS,2
GOTO key_is_zero
MOVF 0X40,0
SUBLW 0X0C
MOVWF 0X30
MOVF 0X30,0
BTFSC STATUS,2
GOTO usart_tx
GOTO reg_setter


key_is_star
MOVF 0X50,0
BTFSC STATUS,2
GOTO get_it
DECF 0X50,1
GOTO output_setter

key_is_zero
MOVF 0X50,0
SUBLW 0X04
MOVWF 0X30
MOVF 0X30,0
BTFSC STATUS,2
CLRF 0X50
INCF 0X50,1
MOVLW 0X00
MOVWF 0X40
MOVWF 0X41
MOVF 0X50,0
SUBLW 0X01
MOVWF 0X30
MOVF 0X30,0
BTFSC STATUS,2
GOTO loc_at_one
MOVF 0X50,0
SUBLW 0X02
MOVWF 0X30
MOVF 0X30,0
BTFSC STATUS,2
GOTO loc_at_two
MOVF 0X50,0
SUBLW 0X03
MOVWF 0X30
MOVF 0X30,0
BTFSC STATUS,2
GOTO loc_at_three
MOVF 0X50,0
SUBLW 0X04
MOVWF 0X30
MOVF 0X30,0
BTFSC STATUS,2
GOTO loc_at_four


loc_at_one
MOVF 0X40,0
MOVWF 0X70
GOTO output_setter

loc_at_two
MOVF 0X40,0
MOVWF 0X71
GOTO output_setter

loc_at_three
MOVF 0X40,0
MOVWF 0X72
GOTO output_setter

loc_at_four
MOVF 0X40,0
MOVWF 0X73
GOTO output_setter

reg_setter
MOVF 0X50,0
SUBLW 0X04
MOVWF 0X30
MOVF 0X30,0
BTFSC STATUS,2
CLRF 0X50
INCF 0X50,1
MOVF 0X50,0
SUBLW 0X01
MOVWF 0X30
MOVF 0X30,0
BTFSC STATUS,2
GOTO loc_at_one
MOVF 0X50,0
SUBLW 0X02
MOVWF 0X30
MOVF 0X30,0
BTFSC STATUS,2
GOTO loc_at_two
MOVF 0X50,0
SUBLW 0X03
MOVWF 0X30
MOVF 0X30,0
BTFSC STATUS,2
GOTO loc_at_three
MOVF 0X50,0
SUBLW 0X04
MOVWF 0X30
MOVF 0X30,0
BTFSC STATUS,2
GOTO loc_at_four

output_setter
;-----------------------------
MOVF 0X22,0
MOVWF TXREG
MOVF TXREG,0
MOVWF PORTA
;-----------------------------
MOVF 0X50,0
BTFSC STATUS,2
GOTO output_null
MOVF 0X50,0
SUBLW 0X01
MOVWF 0X30
MOVF 0X30,0
BTFSC STATUS,2
GOTO output_one
MOVF 0X50,0
SUBLW 0X02
MOVWF 0X30
MOVF 0X30,0
BTFSC STATUS,2
GOTO output_two
MOVF 0X50,0
SUBLW 0X03
MOVWF 0X30
MOVF 0X30,0
BTFSC STATUS,2
GOTO output_three
MOVF 0X50,0
SUBLW 0X04
MOVWF 0X30
MOVF 0X30,0
BTFSC STATUS,2
GOTO output_four

;----------
output_one
;----------
BSF PORTC,2
BCF PORTC,0
CALL delay
MOVLW 0X01
MOVWF PORTD
CALL delay
BCF PORTC,2
CALL delay
BSF PORTC,2
BSF PORTC,0
CALL delay
MOVF 0X70,0
ADDLW 0X30
MOVWF PORTD
CALL delay
BCF PORTC,2

;---------------
GOTO get_it

output_two
BSF PORTC,2
BCF PORTC,0
CALL delay
MOVLW 0X01
MOVWF PORTD
CALL delay
BCF PORTC,2
CALL delay
BSF PORTC,2
BSF PORTC,0
CALL delay
MOVF 0X70,0
ADDLW 0X30
MOVWF PORTD
CALL delay
BCF PORTC,2
CALL delay
BSF PORTC,2
CALL delay
MOVF 0X71,0
ADDLW 0X30
MOVWF PORTD
CALL delay
BCF PORTC,2
GOTO get_it

output_three
BSF PORTC,2
BCF PORTC,0
CALL delay
MOVLW 0X01
MOVWF PORTD
CALL delay
BCF PORTC,2
CALL delay
BSF PORTC,2
BSF PORTC,0
CALL delay
MOVF 0X70,0
ADDLW 0X30
MOVWF PORTD
CALL delay
BCF PORTC,2
CALL delay
BSF PORTC,2
CALL delay
MOVF 0X71,0
ADDLW 0X30
MOVWF PORTD
CALL delay
BCF PORTC,2
CALL delay
BSF PORTC,2
CALL delay
MOVF 0X72,0
ADDLW 0X30
MOVWF PORTD
CALL delay
BCF PORTC,2
GOTO get_it

output_four
BSF PORTC,2
BCF PORTC,0
CALL delay
MOVLW 0X01
MOVWF PORTD
CALL delay
BCF PORTC,2
CALL delay
BSF PORTC,2
BSF PORTC,0
CALL delay
MOVF 0X70,0
ADDLW 0X30
MOVWF PORTD
CALL delay
BCF PORTC,2
CALL delay
BSF PORTC,2
CALL delay
MOVF 0X71,0
ADDLW 0X30
MOVWF PORTD
CALL delay
BCF PORTC,2
CALL delay
BSF PORTC,2
CALL delay
MOVF 0X72,0
ADDLW 0X30
MOVWF PORTD
CALL delay
BCF PORTC,2
CALL delay
BSF PORTC,2
CALL delay
MOVF 0X73,0
ADDLW 0X30
MOVWF PORTD
CALL delay
BCF PORTC,2
GOTO get_it

output_null
BSF PORTC,2
BCF PORTC,0
CALL delay
MOVLW 0X01
MOVWF PORTD
CALL delay
BCF PORTC,2
GOTO get_it


;--------------------------------------------------------

delay
MOVLW 0X09
MOVWF 0X61
D2
MOVLW 0X21
MOVWF 0X60
D1
DECFSZ 0X60,1
GOTO D1
DECFSZ 0X61,1
GOTO D2
RETURN


usart_tx
;
GOTO get_it

end






    
    
      
    
    
	
	
	



